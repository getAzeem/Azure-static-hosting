# azure-pipeline.yml
trigger:
  - main

pr: none

variables:
  - name: terraformVersion
    value: '1.5.0'
  - name: workingDirectory
    value: '$(System.DefaultWorkingDirectory)'

pool:
  name: azure-agent001

steps:
  # Checkout the code
  - checkout: self
    displayName: 'Checkout code'

  # Install unzip first
  - script: |
      sudo apt-get update
      sudo apt-get install -y unzip
    displayName: 'Install unzip'

  # Install Terraform
  - task: TerraformInstaller@0
    displayName: 'Install Terraform'
    inputs:
      terraformVersion: '$(terraformVersion)'

  # Terraform initialization with proper service connection
  - task: TerraformTaskV4@4
    displayName: 'Terraform Init'
    inputs:
      provider: 'azurerm'
      command: 'init'
      workingDirectory: '$(workingDirectory)'
      environmentServiceNameAzureRM: 'AzureService'  # Added this line
      backendServiceArm: 'AzureService'
      backendAzureRmResourceGroupName: 'Backend-static-hosting'
      backendAzureRmStorageAccountName: 'tfstate7800'
      backendAzureRmContainerName: 'tfstate'
      backendAzureRmKey: 'terraform.tfstate'

  # Terraform plan
  - task: TerraformTaskV4@4
    displayName: 'Terraform Plan'
    inputs:
      provider: 'azurerm'
      command: 'plan'
      workingDirectory: '$(workingDirectory)'
      environmentServiceNameAzureRM: 'AzureService'  # Added this line
      commandOptions: '-out=tfplan'

  # Terraform apply
  - task: TerraformTaskV4@4
    displayName: 'Terraform Apply'
    inputs:
      provider: 'azurerm'
      command: 'apply'
      workingDirectory: '$(workingDirectory)'
      environmentServiceNameAzureRM: 'AzureService'  # Added this line
      commandOptions: '-auto-approve tfplan'

  # Display website URL using script (simpler approach)
  - script: |
      WEB_HOST=$(terraform output -raw primary_web_host)
      echo "##vso[task.setvariable variable=websiteUrl]$WEB_HOST"
      echo "Your static website is now live at: $WEB_HOST"
      echo "Website deployed successfully!"
    displayName: 'Display Website URL'
    workingDirectory: '$(workingDirectory)'

  # Optional: Clean up terraform plan file
  - script: |
      rm -f tfplan
    displayName: 'Clean up temporary files'
    condition: always()
